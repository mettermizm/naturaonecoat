import { createTextVNode, ref, watchEffect, defineComponent, toRefs, openBlock, createElementBlock, unref, createBlock, withCtx, createVNode } from "@histoire/vendors/vue";
import { Icon } from "@histoire/vendors/iconify";
import BaseEmpty from "../base/BaseEmpty.js";
import { markdownFiles } from "virtual:$histoire-markdown-files";
const _hoisted_1 = /* @__PURE__ */ createTextVNode(" No documentation available ");
const _hoisted_2 = ["innerHTML"];
function useStoryDoc(story) {
  const renderedDoc = ref("");
  watchEffect(async () => {
    var _a;
    const mdKey = story.value.file.filePath.replace(/\.(\w*?)$/, ".md");
    if (markdownFiles[mdKey]) {
      const md = await markdownFiles[mdKey]();
      renderedDoc.value = md.html;
      return;
    }
    let comp = (_a = story.value.file) == null ? void 0 : _a.component;
    if (comp) {
      if (comp.__asyncResolved) {
        comp = comp.__asyncResolved;
      } else if (comp.__asyncLoader) {
        comp = await comp.__asyncLoader();
      } else if (typeof comp === "function") {
        try {
          comp = await comp();
        } catch (e) {
        }
      }
      if (comp == null ? void 0 : comp.default) {
        comp = comp.default;
      }
      renderedDoc.value = comp.doc;
    }
  });
  return {
    renderedDoc
  };
}
const _sfc_main = defineComponent({
  __name: "StoryDocs",
  props: {
    story: {
      type: Object,
      required: true
    }
  },
  setup(__props) {
    const props = __props;
    const { story } = toRefs(props);
    const { renderedDoc } = useStoryDoc(story);
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", null, [
        !unref(renderedDoc) ? (openBlock(), createBlock(BaseEmpty, { key: 0 }, {
          default: withCtx(() => [
            createVNode(unref(Icon), {
              icon: "carbon:document-unknown",
              class: "htw-w-8 htw-h-8 htw-opacity-50 htw-mb-6"
            }),
            _hoisted_1
          ]),
          _: 1
        })) : (openBlock(), createElementBlock("div", {
          key: 1,
          class: "htw-prose dark:htw-prose-invert htw-p-4 htw-max-w-none",
          "data-test-id": "story-docs",
          innerHTML: unref(renderedDoc)
        }, null, 8, _hoisted_2))
      ]);
    };
  }
});
export { _sfc_main as default, useStoryDoc };
