import { defineComponent, openBlock, createBlock, withCtx, createElementVNode, normalizeStyle } from "@histoire/vendors/vue";
import _sfc_main$1 from "./GenericRenderStory.js";
import StoryResponsivePreview from "./StoryResponsivePreview.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "StoryVariantSinglePreviewNative",
  props: {
    story: null,
    variant: null
  },
  setup(__props) {
    const props = __props;
    Object.assign(props.variant, {
      previewReady: false
    });
    function onReady() {
      Object.assign(props.variant, {
        previewReady: true
      });
    }
    return (_ctx, _cache) => {
      return openBlock(), createBlock(StoryResponsivePreview, { variant: __props.variant }, {
        default: withCtx(({ isResponsiveEnabled, finalWidth, finalHeight }) => [
          createElementVNode("div", {
            style: normalizeStyle(isResponsiveEnabled ? {
              width: finalWidth ? `${finalWidth}px` : "100%",
              height: finalHeight ? `${finalHeight}px` : "100%"
            } : { width: "100%", height: "100%" }),
            class: "htw-relative",
            "data-test-id": "sandbox-render"
          }, [
            (openBlock(), createBlock(_sfc_main$1, {
              key: `${__props.story.id}-${__props.variant.id}`,
              variant: __props.variant,
              story: __props.story,
              class: "htw-h-full",
              onReady
            }, null, 8, ["variant", "story"]))
          ], 4)
        ]),
        _: 1
      }, 8, ["variant"]);
    };
  }
});
export { _sfc_main as default };
